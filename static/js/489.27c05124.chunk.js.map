{"version":3,"file":"static/js/489.27c05124.chunk.js","mappings":"uQAQe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,IAC9B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,OAEL,EAYD,OACE,kBAAMC,SAXa,SAAAJ,GAEnB,GADAA,EAAEK,iBACmB,KAAjBV,EAAMW,QAAqC,KAApBT,EAASS,OAClC,OAAOC,EAAAA,GAAAA,MAAY,2CAErBlB,EAASmB,EAAAA,GAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,GACb,EAGgCW,aAAa,MAA5C,WACE,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLZ,KAAK,QACLC,MAAOR,EACPoB,SAAUhB,KAIZ,SAACW,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,WACLZ,KAAK,WACLC,MAAON,EACPkB,SAAUhB,KAIVR,IACA,SAACyB,EAAA,EAAD,CACEJ,QAAQ,YACRC,MAAM,YACNI,KAAK,QACLH,KAAK,SAJP,oBAUDvB,IAAa,wCAGnB,C","sources":["views/LoginView/LoginView.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport { toast } from 'react-toastify';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n// import s from './LoginView.module.css';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(authSelectors.getLoading);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email.trim() === '' || password.trim() === '') {\n      return toast.error('ðŸ’© Please fill in all fields!');\n    }\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}  autoComplete=\"off\">\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        // className={s.textField}\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        // className={s.textField}\n      />\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Log in\n        </Button>\n      )}\n\n      {isLoading && <p>Loading...</p>}\n    </form>\n  );\n}\n"],"names":["LoginView","dispatch","useDispatch","isLoading","useSelector","authSelectors","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","onSubmit","preventDefault","trim","toast","authOperations","autoComplete","TextField","label","variant","color","type","onChange","Button","size"],"sourceRoot":""}