{"version":3,"file":"static/js/894.54295180.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-operation.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { toast } from 'react-toastify';\nimport Button from '@material-ui/core/Button';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const dispatch = useDispatch();\n\n    const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n    };\n  \n\n    // const handleSubmit = e => {\n    // e.preventDefault();\n\n    //   const newContact = {\n    //   id: nanoid(),\n    //   name:name,\n    //   phone:phone,\n    // };\n\n    //     data.some(contact => contact.name.toLowerCase() === name.toLowerCase())\n    //   ? Report.warning(`${name}`,\n    //     'This user is already in contacts.','OK')\n    //       : addContact((newContact)) && reset();\n    //       };\n        \n    //     // reset();\n    //     //   };\n    \n    // const reset = () => {\n    // setName ('');\n    // setPhone ('');\n    // };\n  \n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = phone => {\n    return contacts.find(contact => contact.phone === phone);\n  };\n\n  const checkEmptyQuery = (name, phone) => {\n    return name.trim() === '' || phone.trim() === '';\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      return toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(phone)) {\n      return toast(`🤔 ${phone} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, phone)) {\n      return toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact(name, phone));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setPhone('');\n  };\n\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={phone}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        {!isLoading && (\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"secondary\"\n            size=\"large\"\n          >\n            Add contact\n          </Button>\n        )}\n        {isLoading && <p>Loading...</p>}\n      </form>\n    );\n  }\n\n\n\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-action';\nimport { toast } from 'react-toastify';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => {\n      dispatch(fetchContactsError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => {\n      dispatch(addContactError(error));\n\n      if (error.response.status === 400) {\n        toast.error('Contact creation error!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => {\n      dispatch(deleteContactError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n  \n  \n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 6px;\n  width: 420px;\n  box-shadow:  inset 0 7em 10em -5em rgba(255,255,255,0.6),\n    0 0.3em 0.5em -0.2em rgba(100,100,100,1),\n    0 1em 2em -0.75em rgba(100,100,100,0.75),\n    0 1em 3em -0.5em rgba(100,100,100,0.5),\n    0 3em 3em -0.25em rgba(100,100,100,0.2);\n`;\n\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\n\nimport { Label, Input } from './Filter.styled';\n\nexport default function Filter() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e =>\n    dispatch(contactsActions(e.currentTarget.value)); \n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n        required\n      />\n    </Label>\n  );\n}\n\n\n\n\n\n","import {useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { motion, AnimatePresence } from 'framer-motion';\n// import { List } from './ContactList.styled';   \n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n   return (\n    <>\n      {contacts.length > 0 && (\n        <motion.ul >\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                \n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                \n              >\n                <p >\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            \n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\n\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter/>\n      <ContactList />\n    </div>\n  );\n}"],"names":["getContacts","state","contacts","items","getLoading","isLoading","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","phone","setPhone","useSelector","contactsSelectors","dispatch","useDispatch","handleChange","e","target","value","resetInput","className","s","onSubmit","preventDefault","find","contact","checkRepeatName","toast","checkRepeatNumber","trim","checkEmptyQuery","number","addContactRequest","axios","then","data","addContactSuccess","catch","error","addContactError","response","status","contactsOperations","type","onChange","placeholder","pattern","title","required","Button","variant","color","size","Label","styled","Input","Filter","contactsActions","currentTarget","ContactList","visibleContacts","length","motion","AnimatePresence","map","id","initial","animate","exit","transition","IconButton","onClick","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","Delete","ContactsView","useEffect","fetchContactsRequest","fetchContactsSuccess","fetchContactsError"],"sourceRoot":""}