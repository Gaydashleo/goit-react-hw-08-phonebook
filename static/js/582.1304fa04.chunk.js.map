{"version":3,"file":"static/js/582.1304fa04.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// import styled from \"@emotion/styled\";\n\n\n// export const LabelForm = styled.label`\n//     margin-bottom: 30px;\n//     border-radius: 5px;\n// `;\n\n// export const SpanForm = styled.span`\n//     font-weight: 700;\n//     margin-right: 5px;\n//     color: #33C1FF;\n    \n// `;\n\n// export const Title = styled.h1`\n//     font-size: 26px;\n//     text-transform: uppercase;\n//     text-align: center;\n//     font-weight: 700;\n//     color: #33C1FF;\n//     margin-bottom: 30px;\n// `;\n\n// export const FormWrap = styled.div`\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     justify-content: center;\n    \n// `;\n\n// export const ContactFormWrap = styled.div`\n//     width: 70%;\n//     margin: 0 auto;\n//     padding: 50px 10px 50px 10px;\n        \n//     box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n//     rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n//     rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n// `;\n\n\nimport styled from \"@emotion/styled\";\n\nexport const LabelForm = styled.label`\n    margin-right: 10px;\n     border-radius: 5px;\n`;\n\nexport const SpanForm = styled.span`\n    font-weight: 700;\n    margin-right: 5px;\n    color: #33C1FF;\n`;\n\n\nexport const Title = styled.h1`\n    font-size: 26px;\n    text-transform: uppercase;\n    font-weight: 700;\n    color: #33C1FF;\n    margin-bottom: 30px;\n`;\n\n\n// export const ContactFormWrap = styled.div`\n\n//     width: 70%;\n//     margin: 0 auto;\n//     padding: 50px 10px 50px 10px;\n        \n//     box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n//     rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n//     rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n// `;","import { useEffect } from \"react\";\nimport { Formik, Form, Field } from 'formik';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Button from '@mui/material/Button';\n\nimport {useGetContactsQuery, useAddContactMutation } from '../../redux/contacts/contactsSliceApi';\nimport { LabelForm, SpanForm, Title } from './ContactForm.styled';\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const ContactForm = () => {\n\n    const [addContact, result] = useAddContactMutation();\n    // console.log(result);\n    const { data: contacts } = useGetContactsQuery();\n\n    const handleSubmit = ({ name, number }, { resetForm }) => {\n        // console.log({ name, number });\n        contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())\n            ? Notify.failure(\n                `${name} is already in contacts.`,\n            )\n            : addContact({ name, number }) && resetForm();\n        \n        \n    };\n\n    useEffect((name) => {\n            if (result.isSuccess) {\n                Notify.success(`The ${name} has been added to your contact list.`);\n                \n            };\n        }, [result.isSuccess]);\n    \n    return (\n        <>\n        {result.isLoading && <Loader/>}\n        \n        <Title>Contacts</Title>\n\n        <Formik\n            initialValues={{ name: '', number: '' }}\n            onSubmit={handleSubmit}\n        >\n            <Form >\n                <LabelForm>\n                    <SpanForm>Name</SpanForm> \n                    <Field\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </LabelForm>\n                <LabelForm>\n                    <SpanForm> Number</SpanForm>\n                    <Field\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </LabelForm>\n                    <Button variant=\"contained\" color=\"primary\" size=\"small\" type=\"submit\" disabled={result.isLoading} >Add Contact</Button>\n            </Form>\n            </Formik>\n            \n        </>\n    );\n};","import styled from \"@emotion/styled\";\n\nexport const ItemContact = styled.li`\n    margin-top: 5px;\n    margin-bottom: 5px;\n`;\n","import React from \"react\";\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsSliceApi';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\nexport const ContactItem = ({name, number, id}) => {\n    \n    const [deleteContact, result] = useDeleteContactMutation();\n    \n    return (\n        <>\n            <p>{name} : {number} </p>\n            <Button variant=\"contained\" startIcon={<DeleteIcon />} color=\"primary\" size=\"small\"\n                type=\"button\"\n                onClick={() => deleteContact(id)}\n                contactId={id}\n                disabled={result.isLoading}\n            >\n                Delete\n            </Button>\n            \n        </>\n    )\n}","import React, {useEffect} from \"react\";\nimport { useSelector } from 'react-redux';\n\nimport { ItemContact } from './ContactList.styled';\nimport { useGetContactsQuery } from '../../redux/contacts/contactsSliceApi';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Loader } from '../Loader/Loader';\n\n\nexport const ContactList = () => {\n\n  const { data: contacts, error, isLoading, refetch } = useGetContactsQuery();\n  const filter = useSelector(state => state.filter);\n \n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n    \n  const filtredContacts = () => {\n      if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n    return (    \n      <ul>\n        {error && <p>{error.data}</p>}\n        {isLoading ? (<Loader />) : ''}\n        {contacts && \n        filtredContacts().map(({name, number, id}) => {\n          return (\n            <ItemContact key={id}>\n              <ContactItem name={name} number={number} id={id} />\n            </ItemContact>\n            );\n            })\n        }\n      </ul>\n    );\n}\n","\n\nimport styled from \"@emotion/styled\";\n\nexport const FilterText = styled.p`\n    font-weight: 700;\n    color: #33C1FF;\n    \n`;\n","// import React from \"react\";\n// import { useDispatch, useSelector } from 'react-redux';\n// import { changeFilter } from '../../redux/contacts/filterSlice';\n// import { Text, FilterWrap } from './Filter.styled';\n\n// export const Filter = () => {\n//   const dispatch = useDispatch();\n//   const filter = useSelector(state => state.filter);\n\n//   const changeFilterValue = event => {\n//     const inputValue = event.target.value;\n//     dispatch(changeFilter(inputValue));\n//   };\n\n//   return (\n//     <FilterWrap>\n//       <Text>Find contacts by name</Text>\n//       <input\n//         type=\"text\"\n//         value={filter}\n//         onChange={changeFilterValue}/>\n      \n//             </FilterWrap>\n//   );\n// }\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterText} from './Filter.styled';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  \n  const changeFilterValue = event => {\n    const inputValue = event.target.value;\n    dispatch(changeFilter(inputValue));\n  };\n\n  return (\n    <>\n      <FilterText>Find contacts by name</FilterText>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={changeFilterValue}\n      />\n    </>\n  );\n}","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { useGetContactsQuery } from '../../redux/contacts/contactsSliceApi';\n\nconst ContactsPage = () => {\n    const { data: contacts } = useGetContactsQuery();\n\n    return (\n        \n        <>\n            <ContactForm />\n            <Filter/>\n            {contacts && contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n        \n            \n        </>\n    )\n}\n\nexport default ContactsPage;\n\n\n"],"names":["LabelForm","styled","SpanForm","Title","ContactForm","useAddContactMutation","addContact","result","contacts","useGetContactsQuery","data","useEffect","name","isSuccess","Notify","isLoading","Loader","initialValues","number","onSubmit","resetForm","some","contact","toLowerCase","type","pattern","title","required","Button","variant","color","size","disabled","ItemContact","ContactItem","id","useDeleteContactMutation","deleteContact","startIcon","Delete","onClick","contactId","ContactList","error","refetch","filter","useSelector","state","includes","map","FilterText","Filter","dispatch","useDispatch","value","onChange","event","inputValue","target","changeFilter","length"],"sourceRoot":""}